# генератор безопасных паролей


import random

digits = '0123456789'
lowercase_letters = 'abcdefghijklmnopqrstuvwxyz'
uppercase_letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
punctuation = '!#$%&*+-=?@^_'
univocal = 'il1Lo0O'
chars = ''


# проверка на корректность ввода числа
def is_valid(num_input):
    if num_input.isnumeric():
        if int(num_input) > 0:
            return True
    else:
        return False


# генерация паролей
def generate_password(length, chars_gen):
    password_another = ''
    for _ in range(int(length)):
        password_another += random.choice(chars_gen)
    return password_another


# проверка на корректность ответа при запросе да/нет
def is_valid_choose(choose_repeat_fc):
    if choose_repeat_fc.isalpha():
        if choose_repeat_fc.lower() == 'д' or choose_repeat_fc.lower() == 'н':
            return True
    else:
        return False


# исключение неоднозначных символов
def except_system_chars(string_for_clear):
    string_clear = ''
    for ind, val in enumerate(string_for_clear):
        if val not in univocal:
            string_clear += val
    return string_clear


print('Привет. Сколько паролей требуется сгенерировать?')
while True:
    password_number = input()
    if is_valid(password_number):
        break
    else:
        print('Задано некорректное количество паролей, которое требуется сгенерировать. Введите целое число больше 0.')
        continue

print('Какая требуется длина пароля?')
while True:
    password_length = input()
    if is_valid(password_length):
        break
    else:
        print('Задано некорректная длина генерируемого (-ых) паролей. Введите целое число больше 0.')
        continue


print('Включать ли цифры 0123456789? | д = да, н = нет')
while True:
    password_nums = input()
    if is_valid_choose(password_nums):
        if password_nums == 'д':
            chars += digits
        break
    else:
        print('Был введён некорректный ответ. Введи "д" или "н": д = да, н = нет:')
        continue


print('Включать ли прописные буквы ABCDEFGHIJKLMNOPQRSTUVWXYZ? | д = да, н = нет')
while True:
    password_chars_up = input()
    if is_valid_choose(password_chars_up):
        if password_chars_up == 'д':
            chars += uppercase_letters
        break
    else:
        print('Был введён некорректный ответ. Введи "д" или "н": д = да, н = нет:')
        continue


print('Включать ли строчные буквы abcdefghijklmnopqrstuvwxyz? | д = да, н = нет')
while True:
    password_chars_low = input()
    if is_valid_choose(password_chars_low):
        if password_chars_low == 'д':
            chars += lowercase_letters
        break
    else:
        print('Был введён некорректный ответ. Введи "д" или "н": д = да, н = нет:')
        continue


print('Включать ли символы "!#$%&*+-=?@^_"? | д = да, н = нет')
while True:
    password_chars_system = input()
    if is_valid_choose(password_chars_system):
        if password_chars_system == 'д':
            chars += punctuation
        break
    else:
        print('Был введён некорректный ответ. Введи "д" или "н": д = да, н = нет:')
        continue


print('Исключать ли неоднозначные символы il1Lo0O? | д = да, н = нет')
while True:
    password_chars_univocal = input()
    if is_valid_choose(password_chars_univocal):
        if password_chars_univocal == 'д':
            chars = except_system_chars(chars)
        break
    else:
        print('Был введён некорректный ответ. Введи "д" или "н": д = да, н = нет:')
        continue

for _ in range(int(password_number)):
    print(generate_password(password_length, chars))
